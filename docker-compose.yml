services:
  postgres:
    container_name: postgres
    image: 'postgres:15'
    restart: always
    # ports:
    #   - '5432:5432'
    volumes:
      - './db_data:/var/lib/postgresql/data'
    environment:
      POSTGRES_PASSWORD: postgrespassword
  pgAdmin:
    container_name: pgAdmin
    image: 'dpage/pgadmin4:latest'
    depends_on:
      - postgres
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    volumes:
      - './data/pgadmin:/var/lib/pgadmin'
    logging:
      driver: json-file
      options:
        max-size: 50m
  graphql-engine:
    container_name: hasura-gql
    image: 'hasura/graphql-engine:v2.40.0'
    depends_on:
      - postgres
    ports:
      - '8085:8080'
    restart: always
    environment:
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ADMIN_SECRET: admin123
      HASURA_GRAPHQL_METADATA_DATABASE_URL: 'postgres://postgres:postgrespassword@postgres:5432/postgres'
      HASURA_GRAPHQL_DATABASE_URL: 'postgres://postgres:postgrespassword@postgres:5432/postgres'
#   portainer:
#     image: 'portainer/portainer-ce:latest'
#     ports:
#       - '9443:9443'
#     volumes:
#       - 'portainerdata:/data'
#       - '/var/run/docker.sock:/var/run/docker.sock'
#     restart: unless-stopped
# volumes:
#   portainerdata: null
